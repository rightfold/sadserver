---
- name: "install system-wide known hostkeys"
  template:
    src: "templates/etc/ssh/ssh_known_hosts"
    dest: "/etc/ssh/ssh_known_hosts"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "set NOPASSWD for sudo group in staging"
  lineinfile:
    dest: "/etc/sudoers.d/ansible"
    line: "%sudo ALL=(ALL:ALL) NOPASSWD:ALL"
    state: "{% if staging == 'true' %}present{% else %}absent{% endif %}"
    create: true
    validate: "visudo -cf %s"

- name:
    "require the admin user to immediately choose a new password in production"
  command: "passwd -de {{ item.name }}"
  when:
    # List is evaluated as logical AND
    - staging == 'false'
    - item.admin
    - item.name != "ansible"
  with_items:
    - "{{ users }}"

- name: "ensure .ssh-directory is present at all users"
  file:
    dest: "{{ item.0.home_prefix }}/{{ item.0.name }}/.ssh"
    state: "directory"
    owner: "{{ item.0.name }}"
    group: "{{ item.0.name }}"
    mode: "0755"
  when: item.0.state == 'present'
  with_subelements:
    - "{{ users }}"
    - "keys"

- name: "ensure SSH keys for users are present"
  blockinfile:
    path: "{{ item.0.home_prefix }}/{{ item.0.name }}/.ssh/authorized_keys"
    block: "{{ lookup('file', 'credentials/ssh/' + item.1.id) }}"
    state: "{{ item.1.state }}"
    marker: "# {mark} SSH key for {{ item.1.id }}"
    owner: "{{ item.0.name }}"
    group: "{{ item.0.name }}"
    create: true
  # Only run the above logic when we still want the user to exist.
  when: item.0.state == 'present'
  with_subelements:
    - "{{ users }}"
    - "keys"

- name: "copy deploy key (private)"
  copy:
    content: "{{ secret_deploy_key }}"
    dest: "/home/ansible/.ssh/deploy_ed25519"
    owner: "ansible"
    group: "ansible"
    mode: "0600"

- name: "copy deploy key (public)"
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
    owner: "ansible"
    group: "ansible"
    mode: "0600"
  with_items:
    - "home/ansible/.ssh/deploy_ed25519.pub"

- name: "symlink deploy keys for root"
  file:
    src: "/home/ansible/.ssh/{{ item.src }}"
    path: "/root/.ssh/{{ item.dest }}"
    state: link
  with_items:
    - { src: "deploy_ed25519", dest: "id_ed25519" }
    - { src: "deploy_ed25519.pub", dest: "id_ed25519.pub" }

- name: "remove public keys for root account"
  file:
    path: "/root/.ssh/authorized_keys"
    state: "absent"

- name: "copy hardened sshd configuration"
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
  with_items: "etc/ssh/sshd_config"
  notify: "reboot server"
